/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as WidgetImport } from './routes/_widget'
import { Route as SplatImport } from './routes/$'
import { Route as WidgetPromptsImport } from './routes/_widget.prompts'
import { Route as WidgetChatsImport } from './routes/_widget.chats'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const WidgetRoute = WidgetImport.update({
  id: '/_widget',
  getParentRoute: () => rootRoute,
} as any)

const SplatRoute = SplatImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRoute,
} as any)

const WidgetPromptsRoute = WidgetPromptsImport.update({
  id: '/prompts',
  path: '/prompts',
  getParentRoute: () => WidgetRoute,
} as any)

const WidgetChatsRoute = WidgetChatsImport.update({
  id: '/chats',
  path: '/chats',
  getParentRoute: () => WidgetRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatImport
      parentRoute: typeof rootRoute
    }
    '/_widget': {
      id: '/_widget'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WidgetImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_widget/chats': {
      id: '/_widget/chats'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof WidgetChatsImport
      parentRoute: typeof WidgetImport
    }
    '/_widget/prompts': {
      id: '/_widget/prompts'
      path: '/prompts'
      fullPath: '/prompts'
      preLoaderRoute: typeof WidgetPromptsImport
      parentRoute: typeof WidgetImport
    }
  }
}

// Create and export the route tree

interface WidgetRouteChildren {
  WidgetChatsRoute: typeof WidgetChatsRoute
  WidgetPromptsRoute: typeof WidgetPromptsRoute
}

const WidgetRouteChildren: WidgetRouteChildren = {
  WidgetChatsRoute: WidgetChatsRoute,
  WidgetPromptsRoute: WidgetPromptsRoute,
}

const WidgetRouteWithChildren =
  WidgetRoute._addFileChildren(WidgetRouteChildren)

export interface FileRoutesByFullPath {
  '/$': typeof SplatRoute
  '': typeof WidgetRouteWithChildren
  '/login': typeof LoginRoute
  '/chats': typeof WidgetChatsRoute
  '/prompts': typeof WidgetPromptsRoute
}

export interface FileRoutesByTo {
  '/$': typeof SplatRoute
  '': typeof WidgetRouteWithChildren
  '/login': typeof LoginRoute
  '/chats': typeof WidgetChatsRoute
  '/prompts': typeof WidgetPromptsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$': typeof SplatRoute
  '/_widget': typeof WidgetRouteWithChildren
  '/login': typeof LoginRoute
  '/_widget/chats': typeof WidgetChatsRoute
  '/_widget/prompts': typeof WidgetPromptsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/$' | '' | '/login' | '/chats' | '/prompts'
  fileRoutesByTo: FileRoutesByTo
  to: '/$' | '' | '/login' | '/chats' | '/prompts'
  id:
    | '__root__'
    | '/$'
    | '/_widget'
    | '/login'
    | '/_widget/chats'
    | '/_widget/prompts'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  SplatRoute: typeof SplatRoute
  WidgetRoute: typeof WidgetRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  SplatRoute: SplatRoute,
  WidgetRoute: WidgetRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$",
        "/_widget",
        "/login"
      ]
    },
    "/$": {
      "filePath": "$.tsx"
    },
    "/_widget": {
      "filePath": "_widget.tsx",
      "children": [
        "/_widget/chats",
        "/_widget/prompts"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_widget/chats": {
      "filePath": "_widget.chats.tsx",
      "parent": "/_widget"
    },
    "/_widget/prompts": {
      "filePath": "_widget.prompts.tsx",
      "parent": "/_widget"
    }
  }
}
ROUTE_MANIFEST_END */
